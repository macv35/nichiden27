

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Jan 11 03:52:09 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1938
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     	;# 
    26  0001                     	;# 
    27  0002                     	;# 
    28  0003                     	;# 
    29  0004                     	;# 
    30  0005                     	;# 
    31  0006                     	;# 
    32  0007                     	;# 
    33  0008                     	;# 
    34  0009                     	;# 
    35  000A                     	;# 
    36  000B                     	;# 
    37  000C                     	;# 
    38  000D                     	;# 
    39  000E                     	;# 
    40  0010                     	;# 
    41  0011                     	;# 
    42  0012                     	;# 
    43  0013                     	;# 
    44  0015                     	;# 
    45  0016                     	;# 
    46  0016                     	;# 
    47  0017                     	;# 
    48  0018                     	;# 
    49  0019                     	;# 
    50  001A                     	;# 
    51  001B                     	;# 
    52  001C                     	;# 
    53  001E                     	;# 
    54  001F                     	;# 
    55  008C                     	;# 
    56  008D                     	;# 
    57  008E                     	;# 
    58  0090                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0095                     	;# 
    63  0096                     	;# 
    64  0097                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009A                     	;# 
    68  009B                     	;# 
    69  009B                     	;# 
    70  009C                     	;# 
    71  009D                     	;# 
    72  009E                     	;# 
    73  010C                     	;# 
    74  010D                     	;# 
    75  010E                     	;# 
    76  0110                     	;# 
    77  0111                     	;# 
    78  0112                     	;# 
    79  0113                     	;# 
    80  0114                     	;# 
    81  0115                     	;# 
    82  0116                     	;# 
    83  0117                     	;# 
    84  0118                     	;# 
    85  0119                     	;# 
    86  011A                     	;# 
    87  011B                     	;# 
    88  011D                     	;# 
    89  018C                     	;# 
    90  018D                     	;# 
    91  0191                     	;# 
    92  0191                     	;# 
    93  0192                     	;# 
    94  0193                     	;# 
    95  0193                     	;# 
    96  0193                     	;# 
    97  0194                     	;# 
    98  0195                     	;# 
    99  0196                     	;# 
   100  0199                     	;# 
   101  019A                     	;# 
   102  019B                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019C                     	;# 
   107  019C                     	;# 
   108  019D                     	;# 
   109  019E                     	;# 
   110  019F                     	;# 
   111  020D                     	;# 
   112  0210                     	;# 
   113  0211                     	;# 
   114  0212                     	;# 
   115  0213                     	;# 
   116  0214                     	;# 
   117  0215                     	;# 
   118  0215                     	;# 
   119  0216                     	;# 
   120  0217                     	;# 
   121  0291                     	;# 
   122  0291                     	;# 
   123  0292                     	;# 
   124  0293                     	;# 
   125  0294                     	;# 
   126  0295                     	;# 
   127  0295                     	;# 
   128  0296                     	;# 
   129  0298                     	;# 
   130  0298                     	;# 
   131  0299                     	;# 
   132  029A                     	;# 
   133  029B                     	;# 
   134  029C                     	;# 
   135  029C                     	;# 
   136  029D                     	;# 
   137  029E                     	;# 
   138  029F                     	;# 
   139  0311                     	;# 
   140  0311                     	;# 
   141  0312                     	;# 
   142  0313                     	;# 
   143  0314                     	;# 
   144  0315                     	;# 
   145  0315                     	;# 
   146  0316                     	;# 
   147  0318                     	;# 
   148  0318                     	;# 
   149  0319                     	;# 
   150  031A                     	;# 
   151  031C                     	;# 
   152  031C                     	;# 
   153  031D                     	;# 
   154  031E                     	;# 
   155  0394                     	;# 
   156  0395                     	;# 
   157  0396                     	;# 
   158  0415                     	;# 
   159  0416                     	;# 
   160  0417                     	;# 
   161  041C                     	;# 
   162  041D                     	;# 
   163  041E                     	;# 
   164  0791                     	;# 
   165  0792                     	;# 
   166  0793                     	;# 
   167  0794                     	;# 
   168  0795                     	;# 
   169  0798                     	;# 
   170  0799                     	;# 
   171  07A0                     	;# 
   172  07A1                     	;# 
   173  07A3                     	;# 
   174  07A4                     	;# 
   175  07A6                     	;# 
   176  07A7                     	;# 
   177  07A9                     	;# 
   178  07AA                     	;# 
   179  0FE4                     	;# 
   180  0FE5                     	;# 
   181  0FE6                     	;# 
   182  0FE7                     	;# 
   183  0FE8                     	;# 
   184  0FE9                     	;# 
   185  0FEA                     	;# 
   186  0FEB                     	;# 
   187  0FED                     	;# 
   188  0FEE                     	;# 
   189  0FEF                     	;# 
   190  0000                     	;# 
   191  0001                     	;# 
   192  0002                     	;# 
   193  0003                     	;# 
   194  0004                     	;# 
   195  0005                     	;# 
   196  0006                     	;# 
   197  0007                     	;# 
   198  0008                     	;# 
   199  0009                     	;# 
   200  000A                     	;# 
   201  000B                     	;# 
   202  000C                     	;# 
   203  000D                     	;# 
   204  000E                     	;# 
   205  0010                     	;# 
   206  0011                     	;# 
   207  0012                     	;# 
   208  0013                     	;# 
   209  0015                     	;# 
   210  0016                     	;# 
   211  0016                     	;# 
   212  0017                     	;# 
   213  0018                     	;# 
   214  0019                     	;# 
   215  001A                     	;# 
   216  001B                     	;# 
   217  001C                     	;# 
   218  001E                     	;# 
   219  001F                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  0090                     	;# 
   224  0091                     	;# 
   225  0092                     	;# 
   226  0093                     	;# 
   227  0095                     	;# 
   228  0096                     	;# 
   229  0097                     	;# 
   230  0098                     	;# 
   231  0099                     	;# 
   232  009A                     	;# 
   233  009B                     	;# 
   234  009B                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  0110                     	;# 
   242  0111                     	;# 
   243  0112                     	;# 
   244  0113                     	;# 
   245  0114                     	;# 
   246  0115                     	;# 
   247  0116                     	;# 
   248  0117                     	;# 
   249  0118                     	;# 
   250  0119                     	;# 
   251  011A                     	;# 
   252  011B                     	;# 
   253  011D                     	;# 
   254  018C                     	;# 
   255  018D                     	;# 
   256  0191                     	;# 
   257  0191                     	;# 
   258  0192                     	;# 
   259  0193                     	;# 
   260  0193                     	;# 
   261  0193                     	;# 
   262  0194                     	;# 
   263  0195                     	;# 
   264  0196                     	;# 
   265  0199                     	;# 
   266  019A                     	;# 
   267  019B                     	;# 
   268  019B                     	;# 
   269  019B                     	;# 
   270  019B                     	;# 
   271  019C                     	;# 
   272  019C                     	;# 
   273  019D                     	;# 
   274  019E                     	;# 
   275  019F                     	;# 
   276  020D                     	;# 
   277  0210                     	;# 
   278  0211                     	;# 
   279  0212                     	;# 
   280  0213                     	;# 
   281  0214                     	;# 
   282  0215                     	;# 
   283  0215                     	;# 
   284  0216                     	;# 
   285  0217                     	;# 
   286  0291                     	;# 
   287  0291                     	;# 
   288  0292                     	;# 
   289  0293                     	;# 
   290  0294                     	;# 
   291  0295                     	;# 
   292  0295                     	;# 
   293  0296                     	;# 
   294  0298                     	;# 
   295  0298                     	;# 
   296  0299                     	;# 
   297  029A                     	;# 
   298  029B                     	;# 
   299  029C                     	;# 
   300  029C                     	;# 
   301  029D                     	;# 
   302  029E                     	;# 
   303  029F                     	;# 
   304  0311                     	;# 
   305  0311                     	;# 
   306  0312                     	;# 
   307  0313                     	;# 
   308  0314                     	;# 
   309  0315                     	;# 
   310  0315                     	;# 
   311  0316                     	;# 
   312  0318                     	;# 
   313  0318                     	;# 
   314  0319                     	;# 
   315  031A                     	;# 
   316  031C                     	;# 
   317  031C                     	;# 
   318  031D                     	;# 
   319  031E                     	;# 
   320  0394                     	;# 
   321  0395                     	;# 
   322  0396                     	;# 
   323  0415                     	;# 
   324  0416                     	;# 
   325  0417                     	;# 
   326  041C                     	;# 
   327  041D                     	;# 
   328  041E                     	;# 
   329  0791                     	;# 
   330  0792                     	;# 
   331  0793                     	;# 
   332  0794                     	;# 
   333  0795                     	;# 
   334  0798                     	;# 
   335  0799                     	;# 
   336  07A0                     	;# 
   337  07A1                     	;# 
   338  07A3                     	;# 
   339  07A4                     	;# 
   340  07A6                     	;# 
   341  07A7                     	;# 
   342  07A9                     	;# 
   343  07AA                     	;# 
   344  0FE4                     	;# 
   345  0FE5                     	;# 
   346  0FE6                     	;# 
   347  0FE7                     	;# 
   348  0FE8                     	;# 
   349  0FE9                     	;# 
   350  0FEA                     	;# 
   351  0FEB                     	;# 
   352  0FED                     	;# 
   353  0FEE                     	;# 
   354  0FEF                     	;# 
   355  0000                     	;# 
   356  0001                     	;# 
   357  0002                     	;# 
   358  0003                     	;# 
   359  0004                     	;# 
   360  0005                     	;# 
   361  0006                     	;# 
   362  0007                     	;# 
   363  0008                     	;# 
   364  0009                     	;# 
   365  000A                     	;# 
   366  000B                     	;# 
   367  000C                     	;# 
   368  000D                     	;# 
   369  000E                     	;# 
   370  0010                     	;# 
   371  0011                     	;# 
   372  0012                     	;# 
   373  0013                     	;# 
   374  0015                     	;# 
   375  0016                     	;# 
   376  0016                     	;# 
   377  0017                     	;# 
   378  0018                     	;# 
   379  0019                     	;# 
   380  001A                     	;# 
   381  001B                     	;# 
   382  001C                     	;# 
   383  001E                     	;# 
   384  001F                     	;# 
   385  008C                     	;# 
   386  008D                     	;# 
   387  008E                     	;# 
   388  0090                     	;# 
   389  0091                     	;# 
   390  0092                     	;# 
   391  0093                     	;# 
   392  0095                     	;# 
   393  0096                     	;# 
   394  0097                     	;# 
   395  0098                     	;# 
   396  0099                     	;# 
   397  009A                     	;# 
   398  009B                     	;# 
   399  009B                     	;# 
   400  009C                     	;# 
   401  009D                     	;# 
   402  009E                     	;# 
   403  010C                     	;# 
   404  010D                     	;# 
   405  010E                     	;# 
   406  0110                     	;# 
   407  0111                     	;# 
   408  0112                     	;# 
   409  0113                     	;# 
   410  0114                     	;# 
   411  0115                     	;# 
   412  0116                     	;# 
   413  0117                     	;# 
   414  0118                     	;# 
   415  0119                     	;# 
   416  011A                     	;# 
   417  011B                     	;# 
   418  011D                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421  0191                     	;# 
   422  0191                     	;# 
   423  0192                     	;# 
   424  0193                     	;# 
   425  0193                     	;# 
   426  0193                     	;# 
   427  0194                     	;# 
   428  0195                     	;# 
   429  0196                     	;# 
   430  0199                     	;# 
   431  019A                     	;# 
   432  019B                     	;# 
   433  019B                     	;# 
   434  019B                     	;# 
   435  019B                     	;# 
   436  019C                     	;# 
   437  019C                     	;# 
   438  019D                     	;# 
   439  019E                     	;# 
   440  019F                     	;# 
   441  020D                     	;# 
   442  0210                     	;# 
   443  0211                     	;# 
   444  0212                     	;# 
   445  0213                     	;# 
   446  0214                     	;# 
   447  0215                     	;# 
   448  0215                     	;# 
   449  0216                     	;# 
   450  0217                     	;# 
   451  0291                     	;# 
   452  0291                     	;# 
   453  0292                     	;# 
   454  0293                     	;# 
   455  0294                     	;# 
   456  0295                     	;# 
   457  0295                     	;# 
   458  0296                     	;# 
   459  0298                     	;# 
   460  0298                     	;# 
   461  0299                     	;# 
   462  029A                     	;# 
   463  029B                     	;# 
   464  029C                     	;# 
   465  029C                     	;# 
   466  029D                     	;# 
   467  029E                     	;# 
   468  029F                     	;# 
   469  0311                     	;# 
   470  0311                     	;# 
   471  0312                     	;# 
   472  0313                     	;# 
   473  0314                     	;# 
   474  0315                     	;# 
   475  0315                     	;# 
   476  0316                     	;# 
   477  0318                     	;# 
   478  0318                     	;# 
   479  0319                     	;# 
   480  031A                     	;# 
   481  031C                     	;# 
   482  031C                     	;# 
   483  031D                     	;# 
   484  031E                     	;# 
   485  0394                     	;# 
   486  0395                     	;# 
   487  0396                     	;# 
   488  0415                     	;# 
   489  0416                     	;# 
   490  0417                     	;# 
   491  041C                     	;# 
   492  041D                     	;# 
   493  041E                     	;# 
   494  0791                     	;# 
   495  0792                     	;# 
   496  0793                     	;# 
   497  0794                     	;# 
   498  0795                     	;# 
   499  0798                     	;# 
   500  0799                     	;# 
   501  07A0                     	;# 
   502  07A1                     	;# 
   503  07A3                     	;# 
   504  07A4                     	;# 
   505  07A6                     	;# 
   506  07A7                     	;# 
   507  07A9                     	;# 
   508  07AA                     	;# 
   509  0FE4                     	;# 
   510  0FE5                     	;# 
   511  0FE6                     	;# 
   512  0FE7                     	;# 
   513  0FE8                     	;# 
   514  0FE9                     	;# 
   515  0FEA                     	;# 
   516  0FEB                     	;# 
   517  0FED                     	;# 
   518  0FEE                     	;# 
   519  0FEF                     	;# 
   520  0000                     	;# 
   521  0001                     	;# 
   522  0002                     	;# 
   523  0003                     	;# 
   524  0004                     	;# 
   525  0005                     	;# 
   526  0006                     	;# 
   527  0007                     	;# 
   528  0008                     	;# 
   529  0009                     	;# 
   530  000A                     	;# 
   531  000B                     	;# 
   532  000C                     	;# 
   533  000D                     	;# 
   534  000E                     	;# 
   535  0010                     	;# 
   536  0011                     	;# 
   537  0012                     	;# 
   538  0013                     	;# 
   539  0015                     	;# 
   540  0016                     	;# 
   541  0016                     	;# 
   542  0017                     	;# 
   543  0018                     	;# 
   544  0019                     	;# 
   545  001A                     	;# 
   546  001B                     	;# 
   547  001C                     	;# 
   548  001E                     	;# 
   549  001F                     	;# 
   550  008C                     	;# 
   551  008D                     	;# 
   552  008E                     	;# 
   553  0090                     	;# 
   554  0091                     	;# 
   555  0092                     	;# 
   556  0093                     	;# 
   557  0095                     	;# 
   558  0096                     	;# 
   559  0097                     	;# 
   560  0098                     	;# 
   561  0099                     	;# 
   562  009A                     	;# 
   563  009B                     	;# 
   564  009B                     	;# 
   565  009C                     	;# 
   566  009D                     	;# 
   567  009E                     	;# 
   568  010C                     	;# 
   569  010D                     	;# 
   570  010E                     	;# 
   571  0110                     	;# 
   572  0111                     	;# 
   573  0112                     	;# 
   574  0113                     	;# 
   575  0114                     	;# 
   576  0115                     	;# 
   577  0116                     	;# 
   578  0117                     	;# 
   579  0118                     	;# 
   580  0119                     	;# 
   581  011A                     	;# 
   582  011B                     	;# 
   583  011D                     	;# 
   584  018C                     	;# 
   585  018D                     	;# 
   586  0191                     	;# 
   587  0191                     	;# 
   588  0192                     	;# 
   589  0193                     	;# 
   590  0193                     	;# 
   591  0193                     	;# 
   592  0194                     	;# 
   593  0195                     	;# 
   594  0196                     	;# 
   595  0199                     	;# 
   596  019A                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019B                     	;# 
   601  019C                     	;# 
   602  019C                     	;# 
   603  019D                     	;# 
   604  019E                     	;# 
   605  019F                     	;# 
   606  020D                     	;# 
   607  0210                     	;# 
   608  0211                     	;# 
   609  0212                     	;# 
   610  0213                     	;# 
   611  0214                     	;# 
   612  0215                     	;# 
   613  0215                     	;# 
   614  0216                     	;# 
   615  0217                     	;# 
   616  0291                     	;# 
   617  0291                     	;# 
   618  0292                     	;# 
   619  0293                     	;# 
   620  0294                     	;# 
   621  0295                     	;# 
   622  0295                     	;# 
   623  0296                     	;# 
   624  0298                     	;# 
   625  0298                     	;# 
   626  0299                     	;# 
   627  029A                     	;# 
   628  029B                     	;# 
   629  029C                     	;# 
   630  029C                     	;# 
   631  029D                     	;# 
   632  029E                     	;# 
   633  029F                     	;# 
   634  0311                     	;# 
   635  0311                     	;# 
   636  0312                     	;# 
   637  0313                     	;# 
   638  0314                     	;# 
   639  0315                     	;# 
   640  0315                     	;# 
   641  0316                     	;# 
   642  0318                     	;# 
   643  0318                     	;# 
   644  0319                     	;# 
   645  031A                     	;# 
   646  031C                     	;# 
   647  031C                     	;# 
   648  031D                     	;# 
   649  031E                     	;# 
   650  0394                     	;# 
   651  0395                     	;# 
   652  0396                     	;# 
   653  0415                     	;# 
   654  0416                     	;# 
   655  0417                     	;# 
   656  041C                     	;# 
   657  041D                     	;# 
   658  041E                     	;# 
   659  0791                     	;# 
   660  0792                     	;# 
   661  0793                     	;# 
   662  0794                     	;# 
   663  0795                     	;# 
   664  0798                     	;# 
   665  0799                     	;# 
   666  07A0                     	;# 
   667  07A1                     	;# 
   668  07A3                     	;# 
   669  07A4                     	;# 
   670  07A6                     	;# 
   671  07A7                     	;# 
   672  07A9                     	;# 
   673  07AA                     	;# 
   674  0FE4                     	;# 
   675  0FE5                     	;# 
   676  0FE6                     	;# 
   677  0FE7                     	;# 
   678  0FE8                     	;# 
   679  0FE9                     	;# 
   680  0FEA                     	;# 
   681  0FEB                     	;# 
   682  0FED                     	;# 
   683  0FEE                     	;# 
   684  0FEF                     	;# 
   685  0000                     	;# 
   686  0001                     	;# 
   687  0002                     	;# 
   688  0003                     	;# 
   689  0004                     	;# 
   690  0005                     	;# 
   691  0006                     	;# 
   692  0007                     	;# 
   693  0008                     	;# 
   694  0009                     	;# 
   695  000A                     	;# 
   696  000B                     	;# 
   697  000C                     	;# 
   698  000D                     	;# 
   699  000E                     	;# 
   700  0010                     	;# 
   701  0011                     	;# 
   702  0012                     	;# 
   703  0013                     	;# 
   704  0015                     	;# 
   705  0016                     	;# 
   706  0016                     	;# 
   707  0017                     	;# 
   708  0018                     	;# 
   709  0019                     	;# 
   710  001A                     	;# 
   711  001B                     	;# 
   712  001C                     	;# 
   713  001E                     	;# 
   714  001F                     	;# 
   715  008C                     	;# 
   716  008D                     	;# 
   717  008E                     	;# 
   718  0090                     	;# 
   719  0091                     	;# 
   720  0092                     	;# 
   721  0093                     	;# 
   722  0095                     	;# 
   723  0096                     	;# 
   724  0097                     	;# 
   725  0098                     	;# 
   726  0099                     	;# 
   727  009A                     	;# 
   728  009B                     	;# 
   729  009B                     	;# 
   730  009C                     	;# 
   731  009D                     	;# 
   732  009E                     	;# 
   733  010C                     	;# 
   734  010D                     	;# 
   735  010E                     	;# 
   736  0110                     	;# 
   737  0111                     	;# 
   738  0112                     	;# 
   739  0113                     	;# 
   740  0114                     	;# 
   741  0115                     	;# 
   742  0116                     	;# 
   743  0117                     	;# 
   744  0118                     	;# 
   745  0119                     	;# 
   746  011A                     	;# 
   747  011B                     	;# 
   748  011D                     	;# 
   749  018C                     	;# 
   750  018D                     	;# 
   751  0191                     	;# 
   752  0191                     	;# 
   753  0192                     	;# 
   754  0193                     	;# 
   755  0193                     	;# 
   756  0193                     	;# 
   757  0194                     	;# 
   758  0195                     	;# 
   759  0196                     	;# 
   760  0199                     	;# 
   761  019A                     	;# 
   762  019B                     	;# 
   763  019B                     	;# 
   764  019B                     	;# 
   765  019B                     	;# 
   766  019C                     	;# 
   767  019C                     	;# 
   768  019D                     	;# 
   769  019E                     	;# 
   770  019F                     	;# 
   771  020D                     	;# 
   772  0210                     	;# 
   773  0211                     	;# 
   774  0212                     	;# 
   775  0213                     	;# 
   776  0214                     	;# 
   777  0215                     	;# 
   778  0215                     	;# 
   779  0216                     	;# 
   780  0217                     	;# 
   781  0291                     	;# 
   782  0291                     	;# 
   783  0292                     	;# 
   784  0293                     	;# 
   785  0294                     	;# 
   786  0295                     	;# 
   787  0295                     	;# 
   788  0296                     	;# 
   789  0298                     	;# 
   790  0298                     	;# 
   791  0299                     	;# 
   792  029A                     	;# 
   793  029B                     	;# 
   794  029C                     	;# 
   795  029C                     	;# 
   796  029D                     	;# 
   797  029E                     	;# 
   798  029F                     	;# 
   799  0311                     	;# 
   800  0311                     	;# 
   801  0312                     	;# 
   802  0313                     	;# 
   803  0314                     	;# 
   804  0315                     	;# 
   805  0315                     	;# 
   806  0316                     	;# 
   807  0318                     	;# 
   808  0318                     	;# 
   809  0319                     	;# 
   810  031A                     	;# 
   811  031C                     	;# 
   812  031C                     	;# 
   813  031D                     	;# 
   814  031E                     	;# 
   815  0394                     	;# 
   816  0395                     	;# 
   817  0396                     	;# 
   818  0415                     	;# 
   819  0416                     	;# 
   820  0417                     	;# 
   821  041C                     	;# 
   822  041D                     	;# 
   823  041E                     	;# 
   824  0791                     	;# 
   825  0792                     	;# 
   826  0793                     	;# 
   827  0794                     	;# 
   828  0795                     	;# 
   829  0798                     	;# 
   830  0799                     	;# 
   831  07A0                     	;# 
   832  07A1                     	;# 
   833  07A3                     	;# 
   834  07A4                     	;# 
   835  07A6                     	;# 
   836  07A7                     	;# 
   837  07A9                     	;# 
   838  07AA                     	;# 
   839  0FE4                     	;# 
   840  0FE5                     	;# 
   841  0FE6                     	;# 
   842  0FE7                     	;# 
   843  0FE8                     	;# 
   844  0FE9                     	;# 
   845  0FEA                     	;# 
   846  0FEB                     	;# 
   847  0FED                     	;# 
   848  0FEE                     	;# 
   849  0FEF                     	;# 
   850  0000                     	;# 
   851  0001                     	;# 
   852  0002                     	;# 
   853  0003                     	;# 
   854  0004                     	;# 
   855  0005                     	;# 
   856  0006                     	;# 
   857  0007                     	;# 
   858  0008                     	;# 
   859  0009                     	;# 
   860  000A                     	;# 
   861  000B                     	;# 
   862  000C                     	;# 
   863  000D                     	;# 
   864  000E                     	;# 
   865  0010                     	;# 
   866  0011                     	;# 
   867  0012                     	;# 
   868  0013                     	;# 
   869  0015                     	;# 
   870  0016                     	;# 
   871  0016                     	;# 
   872  0017                     	;# 
   873  0018                     	;# 
   874  0019                     	;# 
   875  001A                     	;# 
   876  001B                     	;# 
   877  001C                     	;# 
   878  001E                     	;# 
   879  001F                     	;# 
   880  008C                     	;# 
   881  008D                     	;# 
   882  008E                     	;# 
   883  0090                     	;# 
   884  0091                     	;# 
   885  0092                     	;# 
   886  0093                     	;# 
   887  0095                     	;# 
   888  0096                     	;# 
   889  0097                     	;# 
   890  0098                     	;# 
   891  0099                     	;# 
   892  009A                     	;# 
   893  009B                     	;# 
   894  009B                     	;# 
   895  009C                     	;# 
   896  009D                     	;# 
   897  009E                     	;# 
   898  010C                     	;# 
   899  010D                     	;# 
   900  010E                     	;# 
   901  0110                     	;# 
   902  0111                     	;# 
   903  0112                     	;# 
   904  0113                     	;# 
   905  0114                     	;# 
   906  0115                     	;# 
   907  0116                     	;# 
   908  0117                     	;# 
   909  0118                     	;# 
   910  0119                     	;# 
   911  011A                     	;# 
   912  011B                     	;# 
   913  011D                     	;# 
   914  018C                     	;# 
   915  018D                     	;# 
   916  0191                     	;# 
   917  0191                     	;# 
   918  0192                     	;# 
   919  0193                     	;# 
   920  0193                     	;# 
   921  0193                     	;# 
   922  0194                     	;# 
   923  0195                     	;# 
   924  0196                     	;# 
   925  0199                     	;# 
   926  019A                     	;# 
   927  019B                     	;# 
   928  019B                     	;# 
   929  019B                     	;# 
   930  019B                     	;# 
   931  019C                     	;# 
   932  019C                     	;# 
   933  019D                     	;# 
   934  019E                     	;# 
   935  019F                     	;# 
   936  020D                     	;# 
   937  0210                     	;# 
   938  0211                     	;# 
   939  0212                     	;# 
   940  0213                     	;# 
   941  0214                     	;# 
   942  0215                     	;# 
   943  0215                     	;# 
   944  0216                     	;# 
   945  0217                     	;# 
   946  0291                     	;# 
   947  0291                     	;# 
   948  0292                     	;# 
   949  0293                     	;# 
   950  0294                     	;# 
   951  0295                     	;# 
   952  0295                     	;# 
   953  0296                     	;# 
   954  0298                     	;# 
   955  0298                     	;# 
   956  0299                     	;# 
   957  029A                     	;# 
   958  029B                     	;# 
   959  029C                     	;# 
   960  029C                     	;# 
   961  029D                     	;# 
   962  029E                     	;# 
   963  029F                     	;# 
   964  0311                     	;# 
   965  0311                     	;# 
   966  0312                     	;# 
   967  0313                     	;# 
   968  0314                     	;# 
   969  0315                     	;# 
   970  0315                     	;# 
   971  0316                     	;# 
   972  0318                     	;# 
   973  0318                     	;# 
   974  0319                     	;# 
   975  031A                     	;# 
   976  031C                     	;# 
   977  031C                     	;# 
   978  031D                     	;# 
   979  031E                     	;# 
   980  0394                     	;# 
   981  0395                     	;# 
   982  0396                     	;# 
   983  0415                     	;# 
   984  0416                     	;# 
   985  0417                     	;# 
   986  041C                     	;# 
   987  041D                     	;# 
   988  041E                     	;# 
   989  0791                     	;# 
   990  0792                     	;# 
   991  0793                     	;# 
   992  0794                     	;# 
   993  0795                     	;# 
   994  0798                     	;# 
   995  0799                     	;# 
   996  07A0                     	;# 
   997  07A1                     	;# 
   998  07A3                     	;# 
   999  07A4                     	;# 
  1000  07A6                     	;# 
  1001  07A7                     	;# 
  1002  07A9                     	;# 
  1003  07AA                     	;# 
  1004  0FE4                     	;# 
  1005  0FE5                     	;# 
  1006  0FE6                     	;# 
  1007  0FE7                     	;# 
  1008  0FE8                     	;# 
  1009  0FE9                     	;# 
  1010  0FEA                     	;# 
  1011  0FEB                     	;# 
  1012  0FED                     	;# 
  1013  0FEE                     	;# 
  1014  0FEF                     	;# 
  1015  000B                     _INTCONbits	set	11
  1016  0011                     _PIR1bits	set	17
  1017  0015                     _TMR0	set	21
  1018  0095                     _OPTION_REG	set	149
  1019  0095                     _OPTION_REGbits	set	149
  1020  0099                     _OSCCON	set	153
  1021  009A                     _OSCSTAT	set	154
  1022  0098                     _OSCTUNE	set	152
  1023  008C                     _TRISA	set	140
  1024  008D                     _TRISB	set	141
  1025  008E                     _TRISC	set	142
  1026  0090                     _TRISE	set	144
  1027  011D                     _APFCON	set	285
  1028  010C                     _LATA	set	268
  1029  010D                     _LATB	set	269
  1030  010E                     _LATC	set	270
  1031  0110                     _LATE	set	272
  1032  0870                     _LATC0	set	2160
  1033  018C                     _ANSELA	set	396
  1034  018D                     _ANSELB	set	397
  1035  019F                     _BAUDCON	set	415
  1036  0199                     _RCREG	set	409
  1037  019D                     _RCSTA	set	413
  1038  019D                     _RCSTAbits	set	413
  1039  019C                     _SPBRGH	set	412
  1040  019B                     _SPBRGL	set	411
  1041  019A                     _TXREG	set	410
  1042  019E                     _TXSTA	set	414
  1043  020D                     _WPUB	set	525
  1044  0210                     _WPUE	set	528
  1045                           
  1046                           	psect	stringtext
  1047  00BB                     __pstringtext:	
  1048  00BB                     STR_1:	
  1049  00BB  340A               	retlw	10
  1050  00BC  340D               	retlw	13
  1051  00BD  3450               	retlw	80	;'P'
  1052  00BE  346C               	retlw	108	;'l'
  1053  00BF  3465               	retlw	101	;'e'
  1054  00C0  3461               	retlw	97	;'a'
  1055  00C1  3473               	retlw	115	;'s'
  1056  00C2  3465               	retlw	101	;'e'
  1057  00C3  3420               	retlw	32	;' '
  1058  00C4  3474               	retlw	116	;'t'
  1059  00C5  3479               	retlw	121	;'y'
  1060  00C6  3470               	retlw	112	;'p'
  1061  00C7  3465               	retlw	101	;'e'
  1062  00C8  3420               	retlw	32	;' '
  1063  00C9  3461               	retlw	97	;'a'
  1064  00CA  3420               	retlw	32	;' '
  1065  00CB  3463               	retlw	99	;'c'
  1066  00CC  3468               	retlw	104	;'h'
  1067  00CD  3461               	retlw	97	;'a'
  1068  00CE  3472               	retlw	114	;'r'
  1069  00CF  3461               	retlw	97	;'a'
  1070  00D0  3463               	retlw	99	;'c'
  1071  00D1  3474               	retlw	116	;'t'
  1072  00D2  3465               	retlw	101	;'e'
  1073  00D3  3472               	retlw	114	;'r'
  1074  00D4  340A               	retlw	10
  1075  00D5  340D               	retlw	13
  1076  00D6  3400               	retlw	0
  1077  00D7                     STR_3:	
  1078  00D7  340A               	retlw	10
  1079  00D8  340D               	retlw	13
  1080  00D9  3459               	retlw	89	;'Y'
  1081  00DA  346F               	retlw	111	;'o'
  1082  00DB  3475               	retlw	117	;'u'
  1083  00DC  3420               	retlw	32	;' '
  1084  00DD  3474               	retlw	116	;'t'
  1085  00DE  3479               	retlw	121	;'y'
  1086  00DF  3470               	retlw	112	;'p'
  1087  00E0  3465               	retlw	101	;'e'
  1088  00E1  3420               	retlw	32	;' '
  1089  00E2  3461               	retlw	97	;'a'
  1090  00E3  3420               	retlw	32	;' '
  1091  00E4  3422               	retlw	34	;'"'
  1092  00E5  3400               	retlw	0
  1093  00E6                     STR_4:	
  1094  00E6  3422               	retlw	34	;'"'
  1095  00E7  340D               	retlw	13
  1096  00E8  340A               	retlw	10
  1097  00E9  3400               	retlw	0
  1098  00EA                     STR_2:	
  1099  00EA  3425               	retlw	37	;'%'
  1100  00EB  3463               	retlw	99	;'c'
  1101  00EC  3400               	retlw	0
  1102                           
  1103                           ; #config settings
  1104  0000                     
  1105                           	psect	cinit
  1106  0015                     start_initialization:	
  1107  0015                     __initialization:	
  1108                           
  1109                           ; Clear objects allocated to COMMON
  1110  0015  01FC               	clrf	__pbssCOMMON& (0+127)
  1111                           
  1112                           ; Clear objects allocated to BANK0
  1113  0016  01E5               	clrf	__pbssBANK0& (0+127)
  1114  0017  01E6               	clrf	(__pbssBANK0+1)& (0+127)
  1115  0018                     end_of_initialization:	
  1116                           ;End of C runtime variable initialization code
  1117                           
  1118  0018                     __end_of__initialization:	
  1119  0018  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1120  0019  0020               	movlb	0
  1121  001A  3180  281C         	ljmp	_main	;jump to C main() function
  1122                           
  1123                           	psect	bssCOMMON
  1124  007C                     __pbssCOMMON:	
  1125  007C                     _timer0ReloadVal:	
  1126  007C                     	ds	1
  1127                           
  1128                           	psect	bssBANK0
  1129  0065                     __pbssBANK0:	
  1130  0065                     TMR0_ISR@CountCallBack:	
  1131  0065                     	ds	2
  1132                           
  1133                           	psect	cstackCOMMON
  1134  0070                     __pcstackCOMMON:	
  1135  0070                     ?_TMR0_CallBack:	
  1136  0070                     ??_TMR0_CallBack:	
  1137                           ; 0 bytes @ 0x0
  1138                           
  1139  0070                     ?_OSCILLATOR_Initialize:	
  1140                           ; 0 bytes @ 0x0
  1141                           
  1142  0070                     ?_EUSART_Initialize:	
  1143                           ; 0 bytes @ 0x0
  1144                           
  1145  0070                     ?_EUSART_Write:	
  1146                           ; 0 bytes @ 0x0
  1147                           
  1148  0070                     ?_putch:	
  1149                           ; 0 bytes @ 0x0
  1150                           
  1151  0070                     ?_TMR0_Initialize:	
  1152                           ; 0 bytes @ 0x0
  1153                           
  1154  0070                     ?_TMR0_ISR:	
  1155                           ; 0 bytes @ 0x0
  1156                           
  1157  0070                     ??_TMR0_ISR:	
  1158                           ; 0 bytes @ 0x0
  1159                           
  1160  0070                     ?_PIN_MANAGER_Initialize:	
  1161                           ; 0 bytes @ 0x0
  1162                           
  1163  0070                     ?_INTERRUPT_InterruptManager:	
  1164                           ; 0 bytes @ 0x0
  1165                           
  1166  0070                     ??_INTERRUPT_InterruptManager:	
  1167                           ; 0 bytes @ 0x0
  1168                           
  1169  0070                     ?_SYSTEM_Initialize:	
  1170                           ; 0 bytes @ 0x0
  1171                           
  1172  0070                     ?_main:	
  1173                           ; 0 bytes @ 0x0
  1174                           
  1175  0070                     ?_EUSART_Read:	
  1176                           ; 0 bytes @ 0x0
  1177                           
  1178  0070                     ?_getch:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181                           
  1182                           ; 1 bytes @ 0x0
  1183  0070                     	ds	1
  1184  0071                     ??_OSCILLATOR_Initialize:	
  1185  0071                     ??_EUSART_Initialize:	
  1186                           ; 0 bytes @ 0x1
  1187                           
  1188  0071                     ??_EUSART_Read:	
  1189                           ; 0 bytes @ 0x1
  1190                           
  1191  0071                     ??_EUSART_Write:	
  1192                           ; 0 bytes @ 0x1
  1193                           
  1194  0071                     ??_getch:	
  1195                           ; 0 bytes @ 0x1
  1196                           
  1197  0071                     ??_TMR0_Initialize:	
  1198                           ; 0 bytes @ 0x1
  1199                           
  1200  0071                     ??_PIN_MANAGER_Initialize:	
  1201                           ; 0 bytes @ 0x1
  1202                           
  1203  0071                     ??_SYSTEM_Initialize:	
  1204                           ; 0 bytes @ 0x1
  1205                           
  1206  0071                     EUSART_Write@txData:	
  1207                           ; 0 bytes @ 0x1
  1208                           
  1209                           
  1210                           ; 1 bytes @ 0x1
  1211  0071                     	ds	1
  1212  0072                     ??_putch:	
  1213  0072                     putch@txData:	
  1214                           ; 0 bytes @ 0x2
  1215                           
  1216                           
  1217                           ; 1 bytes @ 0x2
  1218  0072                     	ds	1
  1219  0073                     ?_printf:	
  1220  0073                     printf@f:	
  1221                           ; 2 bytes @ 0x3
  1222                           
  1223                           
  1224                           ; 2 bytes @ 0x3
  1225  0073                     	ds	4
  1226  0077                     ??_printf:	
  1227                           
  1228                           ; 0 bytes @ 0x7
  1229  0077                     	ds	3
  1230  007A                     ??_main:	
  1231                           
  1232                           ; 0 bytes @ 0xA
  1233  007A                     	ds	2
  1234                           
  1235                           	psect	cstackBANK0
  1236  0020                     __pcstackBANK0:	
  1237  0020                     printf@flag:	
  1238                           
  1239                           ; 1 bytes @ 0x0
  1240  0020                     	ds	1
  1241  0021                     printf@ap:	
  1242                           
  1243                           ; 1 bytes @ 0x1
  1244  0021                     	ds	1
  1245  0022                     printf@c:	
  1246                           
  1247                           ; 1 bytes @ 0x2
  1248  0022                     	ds	1
  1249  0023                     main@buff:	
  1250                           
  1251                           ; 64 bytes @ 0x3
  1252  0023                     	ds	64
  1253  0063                     main@ch:	
  1254                           
  1255                           ; 1 bytes @ 0x43
  1256  0063                     	ds	1
  1257  0064                     main@count:	
  1258                           
  1259                           ; 1 bytes @ 0x44
  1260  0064                     	ds	1
  1261                           
  1262                           	psect	maintext
  1263  001C                     __pmaintext:	
  1264 ;;
  1265 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1266 ;;
  1267 ;; *************** function _main *****************
  1268 ;; Defined at:
  1269 ;;		line 52 in file "main.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;		None
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  buff           64    3[BANK0 ] unsigned char [64]
  1274 ;;  count           1   68[BANK0 ] unsigned char 
  1275 ;;  ch              1   67[BANK0 ] unsigned char 
  1276 ;; Return value:  Size  Location     Type
  1277 ;;		None               void
  1278 ;; Registers used:
  1279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1280 ;; Tracked objects:
  1281 ;;		On entry : B1F/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1286 ;;      Locals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1287 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1288 ;;      Totals:         2      66       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1289 ;;Total ram usage:       68 bytes
  1290 ;; Hardware stack levels required when called:    6
  1291 ;; This function calls:
  1292 ;;		_SYSTEM_Initialize
  1293 ;;		_getch
  1294 ;;		_printf
  1295 ;; This function is called by:
  1296 ;;		Startup code after reset
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           
  1301                           ;psect for function _main
  1302  001C                     _main:	
  1303                           
  1304                           ;main.c: 54: SYSTEM_Initialize();
  1305                           
  1306                           ;incstack = 0
  1307                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1308  001C  3181  2125  3180   	fcall	_SYSTEM_Initialize
  1309                           
  1310                           ;main.c: 60: (INTCONbits.GIE = 1);
  1311  001F  178B               	bsf	11,7	;volatile
  1312                           
  1313                           ;main.c: 63: (INTCONbits.PEIE = 1);
  1314  0020  170B               	bsf	11,6	;volatile
  1315  0021                     L2:	
  1316                           
  1317                           ;main.c: 71: char buff[64];
  1318                           ;main.c: 72: char ch;
  1319                           ;main.c: 73: unsigned char count = 0;
  1320  0021  0020               	movlb	0	; select bank0
  1321  0022  01E4               	clrf	main@count
  1322                           
  1323                           ;main.c: 74: buff[0] = 0;
  1324  0023  01A3               	clrf	main@buff
  1325                           
  1326                           ;main.c: 77: printf("\n\rPlease type a character\n\r");
  1327                           
  1328                           ;main.c: 75: while (1) {
  1329  0024  30BB               	movlw	low (STR_1| (0+32768))
  1330  0025  00F3               	movwf	printf@f
  1331  0026  3080               	movlw	high (STR_1| (0+32768))
  1332  0027  00F4               	movwf	printf@f+1
  1333  0028  3180  2070  3180   	fcall	_printf
  1334  002B                     L3:	
  1335                           
  1336                           ;main.c: 78: ch = getch();
  1337  002B  3181  2168  3180   	fcall	_getch
  1338  002E  00FA               	movwf	??_main
  1339  002F  087A               	movf	??_main,w
  1340  0030  0020               	movlb	0	; select bank0
  1341  0031  00E3               	movwf	main@ch
  1342  0032  300D               	movlw	13
  1343  0033  0663               	xorwf	main@ch,w
  1344  0034  1903               	btfsc	3,2
  1345  0035  285A               	goto	l960
  1346                           
  1347                           ;main.c: 80: printf("%c", ch);
  1348                           
  1349                           ;main.c: 79: while (ch != '\r') {
  1350  0036  30EA               	movlw	low (STR_2| (0+32768))
  1351  0037  00F3               	movwf	printf@f
  1352  0038  3080               	movlw	high (STR_2| (0+32768))
  1353  0039  00F4               	movwf	printf@f+1
  1354  003A  0863               	movf	main@ch,w
  1355  003B  00FA               	movwf	??_main
  1356  003C  01FB               	clrf	??_main+1
  1357  003D  087A               	movf	??_main,w
  1358  003E  00F5               	movwf	?_printf+2
  1359  003F  087B               	movf	??_main+1,w
  1360  0040  00F6               	movwf	?_printf+3
  1361  0041  3180  2070  3180   	fcall	_printf
  1362                           
  1363                           ;main.c: 81: buff[count] = ch;
  1364  0044  0020               	movlb	0	; select bank0
  1365  0045  0863               	movf	main@ch,w
  1366  0046  00FA               	movwf	??_main
  1367  0047  0864               	movf	main@count,w
  1368  0048  3E23               	addlw	(low (main@buff| 0))& (0+255)
  1369  0049  0086               	movwf	6
  1370  004A  0187               	clrf	7
  1371  004B  087A               	movf	??_main,w
  1372  004C  0081               	movwf	1
  1373                           
  1374                           ;main.c: 82: count++;
  1375  004D  3001               	movlw	1
  1376  004E  00FA               	movwf	??_main
  1377  004F  087A               	movf	??_main,w
  1378  0050  07E4               	addwf	main@count,f
  1379                           
  1380                           ;main.c: 83: buff[count] = 0;
  1381  0051  0864               	movf	main@count,w
  1382  0052  3E23               	addlw	(low (main@buff| 0))& (0+255)
  1383  0053  0086               	movwf	6
  1384  0054  0187               	clrf	7
  1385  0055  0181               	clrf	1
  1386                           
  1387                           ;main.c: 84: if (count == 63) {
  1388  0056  303F               	movlw	63
  1389  0057  0664               	xorwf	main@count,w
  1390  0058  1D03               	btfss	3,2
  1391  0059  282B               	goto	L3
  1392  005A                     l960:	
  1393                           ;main.c: 86: }
  1394                           ;main.c: 87: ch = getch();
  1395                           
  1396                           ;main.c: 85: break;
  1397                           
  1398                           
  1399                           ;main.c: 88: }
  1400                           ;main.c: 89: printf("\n\rYou type a \"");
  1401  005A  30D7               	movlw	low (STR_3| (0+32768))
  1402  005B  00F3               	movwf	printf@f
  1403  005C  3080               	movlw	high (STR_3| (0+32768))
  1404  005D  00F4               	movwf	printf@f+1
  1405  005E  3180  2070  3180   	fcall	_printf
  1406                           
  1407                           ;main.c: 90: printf(buff);
  1408  0061  3023               	movlw	low main@buff
  1409  0062  00F3               	movwf	printf@f
  1410  0063  3000               	movlw	high main@buff
  1411  0064  00F4               	movwf	printf@f+1
  1412  0065  3180  2070  3180   	fcall	_printf
  1413                           
  1414                           ;main.c: 91: printf("\"\r\n");
  1415  0068  30E6               	movlw	low (STR_4| (0+32768))
  1416  0069  00F3               	movwf	printf@f
  1417  006A  3080               	movlw	high (STR_4| (0+32768))
  1418  006B  00F4               	movwf	printf@f+1
  1419  006C  3180  2070  3180   	fcall	_printf
  1420  006F  2821               	goto	L2
  1421  0070                     __end_of_main:	
  1422                           ;main.c: 93: buff[0] = 0;
  1423                           
  1424                           ;main.c: 92: count = 0;
  1425                           
  1426                           
  1427                           	psect	text1
  1428  0070                     __ptext1:	
  1429 ;; *************** function _printf *****************
  1430 ;; Defined at:
  1431 ;;		line 464 in file "/Applications/microchip/xc8/v1.35/sources/common/doprnt.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  f               2    3[COMMON] PTR const unsigned char 
  1434 ;;		 -> STR_4(4), STR_3(15), STR_2(3), STR_1(28), 
  1435 ;;		 -> main@buff(64), 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  tmpval          4    0        struct .
  1438 ;;  cp              2    0        PTR const unsigned char 
  1439 ;;  len             2    0        unsigned int 
  1440 ;;  val             2    0        unsigned int 
  1441 ;;  c               1    2[BANK0 ] char 
  1442 ;;  ap              1    1[BANK0 ] PTR void [1]
  1443 ;;		 -> ?_printf(2), 
  1444 ;;  flag            1    0[BANK0 ] unsigned char 
  1445 ;;  prec            1    0        char 
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  2    3[COMMON] int 
  1448 ;; Registers used:
  1449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1455 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1456 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1457 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1458 ;;      Totals:         7       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1459 ;;Total ram usage:       10 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; Hardware stack levels required when called:    5
  1462 ;; This function calls:
  1463 ;;		_putch
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           
  1470                           ;psect for function _printf
  1471  0070                     _printf:	
  1472                           
  1473                           ;doprnt.c: 466: va_list ap;
  1474                           ;doprnt.c: 499: signed char c;
  1475                           ;doprnt.c: 506: signed char prec;
  1476                           ;doprnt.c: 508: unsigned char flag;
  1477                           ;doprnt.c: 523: union {
  1478                           ;doprnt.c: 524: unsigned long vd;
  1479                           ;doprnt.c: 525: double integ;
  1480                           ;doprnt.c: 526: } tmpval;
  1481                           ;doprnt.c: 528: unsigned int val;
  1482                           ;doprnt.c: 529: unsigned len;
  1483                           ;doprnt.c: 530: const char * cp;
  1484                           ;doprnt.c: 533: *ap = __va_start();
  1485                           
  1486                           ;incstack = 0
  1487                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1488  0070  3075               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1489  0071  00F7               	movwf	??_printf
  1490  0072  0877               	movf	??_printf,w
  1491  0073  0020               	movlb	0	; select bank0
  1492  0074  00A1               	movwf	printf@ap
  1493  0075                     l928:	
  1494                           ;doprnt.c: 1422: {
  1495                           
  1496                           ;doprnt.c: 536: while(c = *f++) {
  1497                           
  1498  0075  0874               	movf	printf@f+1,w
  1499  0076  00F8               	movwf	??_printf+1
  1500  0077  0873               	movf	printf@f,w
  1501  0078  00F7               	movwf	??_printf
  1502  0079  0AF3               	incf	printf@f,f
  1503  007A  1903               	skipnz
  1504  007B  0AF4               	incf	printf@f+1,f
  1505  007C  0877               	movf	??_printf,w
  1506  007D  0084               	movwf	4
  1507  007E  0878               	movf	??_printf+1,w
  1508  007F  0085               	movwf	5
  1509  0080  0800               	movf	0,w	;code access
  1510  0081  00F9               	movwf	??_printf+2
  1511  0082  0879               	movf	??_printf+2,w
  1512  0083  0020               	movlb	0	; select bank0
  1513  0084  00A2               	movwf	printf@c
  1514  0085  0822               	movf	printf@c,w
  1515  0086  1903               	btfsc	3,2
  1516  0087  0008               	return
  1517                           
  1518                           ;doprnt.c: 538: if(c != '%')
  1519  0088  3025               	movlw	37
  1520  0089  0622               	xorwf	printf@c,w
  1521  008A  1903               	btfsc	3,2
  1522  008B  2891               	goto	l916
  1523                           
  1524                           ;doprnt.c: 540: {
  1525                           ;doprnt.c: 541: (putch(c) );
  1526  008C  0822               	movf	printf@c,w
  1527  008D  3181  215F  3180   	fcall	_putch
  1528                           
  1529                           ;doprnt.c: 542: continue;
  1530  0090  2875               	goto	l928
  1531  0091                     l916:	
  1532                           
  1533                           ;doprnt.c: 543: }
  1534                           ;doprnt.c: 548: flag = 0;
  1535  0091  0020               	movlb	0	; select bank0
  1536  0092  01A0               	clrf	printf@flag
  1537                           
  1538                           ;doprnt.c: 635: switch(c = *f++) {
  1539  0093  28A4               	goto	l926
  1540  0094                     l918:	
  1541                           ;doprnt.c: 784: case 'c':
  1542                           
  1543                           ;doprnt.c: 638: goto alldone;
  1544                           
  1545                           ;doprnt.c: 637: case 0:
  1546                           
  1547                           
  1548                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  1549  0094  0821               	movf	printf@ap,w
  1550  0095  0086               	movwf	6
  1551  0096  0187               	clrf	7
  1552  0097  0801               	movf	1,w
  1553  0098  00F7               	movwf	??_printf
  1554  0099  0877               	movf	??_printf,w
  1555  009A  00A2               	movwf	printf@c
  1556  009B  3002               	movlw	2
  1557  009C  00F7               	movwf	??_printf
  1558  009D  0877               	movf	??_printf,w
  1559  009E  07A1               	addwf	printf@ap,f
  1560  009F                     l922:	
  1561                           ;doprnt.c: 802: default:
  1562                           
  1563                           
  1564                           ;doprnt.c: 809: (putch(c) );
  1565  009F  0822               	movf	printf@c,w
  1566  00A0  3181  215F  3180   	fcall	_putch
  1567                           
  1568                           ;doprnt.c: 822: }
  1569                           
  1570                           ;doprnt.c: 810: continue;
  1571  00A3  2875               	goto	l928
  1572  00A4                     l926:	
  1573  00A4  0874               	movf	printf@f+1,w
  1574  00A5  00F8               	movwf	??_printf+1
  1575  00A6  0873               	movf	printf@f,w
  1576  00A7  00F7               	movwf	??_printf
  1577  00A8  0AF3               	incf	printf@f,f
  1578  00A9  1903               	skipnz
  1579  00AA  0AF4               	incf	printf@f+1,f
  1580  00AB  0877               	movf	??_printf,w
  1581  00AC  0084               	movwf	4
  1582  00AD  0878               	movf	??_printf+1,w
  1583  00AE  0085               	movwf	5
  1584  00AF  0800               	movf	0,w	;code access
  1585  00B0  0020               	movlb	0	; select bank0
  1586  00B1  00A2               	movwf	printf@c
  1587                           
  1588                           ; Switch size 1, requested type "space"
  1589                           ; Number of cases is 2, Range of values is 0 to 99
  1590                           ; switch strategies available:
  1591                           ; Name         Instructions Cycles
  1592                           ; simple_byte            7     4 (average)
  1593                           ; direct_byte          206     6 (fixed)
  1594                           ; jumptable            260     6 (fixed)
  1595                           ;	Chosen strategy is simple_byte
  1596  00B2  3A00               	xorlw	0	; case 0
  1597  00B3  1903               	skipnz
  1598  00B4  28BA               	goto	l172
  1599  00B5  3A63               	xorlw	99	; case 99
  1600  00B6  1903               	skipnz
  1601  00B7  2894               	goto	l918
  1602  00B8  289F               	goto	l922
  1603  00B9  2875               	goto	l928
  1604  00BA                     l172:	
  1605                           ;doprnt.c: 1540: return 0;
  1606                           ;	Return value of _printf is never used
  1607                           
  1608                           ;doprnt.c: 1469: }
  1609                           ;doprnt.c: 1533: }
  1610                           ;doprnt.c: 1535: alldone:
  1611                           
  1612  00BA  0008               	return
  1613  00BB                     __end_of_printf:	
  1614                           
  1615                           	psect	text2
  1616  015F                     __ptext2:	
  1617 ;; *************** function _putch *****************
  1618 ;; Defined at:
  1619 ;;		line 102 in file "mcc_generated_files/eusart.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;  txData          1    wreg     unsigned char 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  txData          1    2[COMMON] unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;		None               void
  1626 ;; Registers used:
  1627 ;;		wreg, status,2, status,0, pclath, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1636 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1637 ;;Total ram usage:        1 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; Hardware stack levels required when called:    4
  1640 ;; This function calls:
  1641 ;;		_EUSART_Write
  1642 ;; This function is called by:
  1643 ;;		_printf
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           
  1648                           ;psect for function _putch
  1649  015F                     _putch:	
  1650                           
  1651                           ;incstack = 0
  1652                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  1653                           ;putch@txData stored from wreg
  1654  015F  00F2               	movwf	putch@txData
  1655                           
  1656                           ;eusart.c: 103: EUSART_Write(txData);
  1657  0160  0872               	movf	putch@txData,w
  1658  0161  3181  2151         	fcall	_EUSART_Write
  1659  0163  0008               	return
  1660  0164                     __end_of_putch:	
  1661                           
  1662                           	psect	text3
  1663  0151                     __ptext3:	
  1664 ;; *************** function _EUSART_Write *****************
  1665 ;; Defined at:
  1666 ;;		line 91 in file "mcc_generated_files/eusart.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  txData          1    wreg     unsigned char 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;  txData          1    1[COMMON] unsigned char 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;		None               void
  1673 ;; Registers used:
  1674 ;;		wreg
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1683 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1684 ;;Total ram usage:        1 bytes
  1685 ;; Hardware stack levels used:    1
  1686 ;; Hardware stack levels required when called:    3
  1687 ;; This function calls:
  1688 ;;		Nothing
  1689 ;; This function is called by:
  1690 ;;		_putch
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           
  1695                           ;psect for function _EUSART_Write
  1696  0151                     _EUSART_Write:	
  1697                           
  1698                           ;incstack = 0
  1699                           ; Regs used in _EUSART_Write: [wreg]
  1700                           ;EUSART_Write@txData stored from wreg
  1701  0151  00F1               	movwf	EUSART_Write@txData
  1702  0152                     l31:	
  1703                           ;eusart.c: 92: while (0 == PIR1bits.TXIF) {
  1704                           
  1705  0152  0020               	movlb	0	; select bank0
  1706  0153  1E11               	btfss	17,4	;volatile
  1707  0154  2952               	goto	l31
  1708                           
  1709                           ;eusart.c: 93: }
  1710                           ;eusart.c: 95: TXREG = txData;
  1711  0155  0871               	movf	EUSART_Write@txData,w
  1712  0156  0023               	movlb	3	; select bank3
  1713  0157  009A               	movwf	26	;volatile
  1714  0158  0008               	return
  1715  0159                     __end_of_EUSART_Write:	
  1716                           
  1717                           	psect	text4
  1718  0168                     __ptext4:	
  1719 ;; *************** function _getch *****************
  1720 ;; Defined at:
  1721 ;;		line 98 in file "mcc_generated_files/eusart.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;		None
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;		None
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  1    wreg      unsigned char 
  1728 ;; Registers used:
  1729 ;;		wreg, pclath, cstack
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1739 ;;Total ram usage:        0 bytes
  1740 ;; Hardware stack levels used:    1
  1741 ;; Hardware stack levels required when called:    4
  1742 ;; This function calls:
  1743 ;;		_EUSART_Read
  1744 ;; This function is called by:
  1745 ;;		_main
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           
  1750                           ;psect for function _getch
  1751  0168                     _getch:	
  1752                           
  1753                           ;eusart.c: 99: return EUSART_Read();
  1754                           
  1755                           ;incstack = 0
  1756                           ; Regs used in _getch: [wreg+pclath+cstack]
  1757  0168  3181  2147         	fcall	_EUSART_Read
  1758  016A  0008               	return
  1759  016B                     __end_of_getch:	
  1760                           
  1761                           	psect	text5
  1762  0147                     __ptext5:	
  1763 ;; *************** function _EUSART_Read *****************
  1764 ;; Defined at:
  1765 ;;		line 76 in file "mcc_generated_files/eusart.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;		None
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      unsigned char 
  1772 ;; Registers used:
  1773 ;;		wreg
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1783 ;;Total ram usage:        0 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; Hardware stack levels required when called:    3
  1786 ;; This function calls:
  1787 ;;		Nothing
  1788 ;; This function is called by:
  1789 ;;		_getch
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           
  1794                           ;psect for function _EUSART_Read
  1795  0147                     _EUSART_Read:	
  1796  0147                     l24:	
  1797                           ;eusart.c: 78: while (!PIR1bits.RCIF) {
  1798                           
  1799                           ;incstack = 0
  1800                           ; Regs used in _EUSART_Read: [wreg]
  1801                           
  1802  0147  0020               	movlb	0	; select bank0
  1803  0148  1E91               	btfss	17,5	;volatile
  1804  0149  2947               	goto	l24
  1805                           
  1806                           ;eusart.c: 79: }
  1807                           ;eusart.c: 81: if (1 == RCSTAbits.OERR) {
  1808  014A  0023               	movlb	3	; select bank3
  1809  014B  1C9D               	btfss	29,1	;volatile
  1810  014C  294F               	goto	l784
  1811                           
  1812                           ;eusart.c: 84: RCSTAbits.CREN = 0;
  1813  014D  121D               	bcf	29,4	;volatile
  1814                           
  1815                           ;eusart.c: 85: RCSTAbits.CREN = 1;
  1816  014E  161D               	bsf	29,4	;volatile
  1817  014F                     l784:	
  1818                           
  1819                           ;eusart.c: 86: }
  1820                           ;eusart.c: 88: return RCREG;
  1821  014F  0819               	movf	25,w	;volatile
  1822  0150  0008               	return
  1823  0151                     __end_of_EUSART_Read:	
  1824                           
  1825                           	psect	text6
  1826  0125                     __ptext6:	
  1827 ;; *************** function _SYSTEM_Initialize *****************
  1828 ;; Defined at:
  1829 ;;		line 71 in file "mcc_generated_files/mcc.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;		None               void
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0, pclath, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1847 ;;Total ram usage:        0 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    4
  1850 ;; This function calls:
  1851 ;;		_EUSART_Initialize
  1852 ;;		_OSCILLATOR_Initialize
  1853 ;;		_PIN_MANAGER_Initialize
  1854 ;;		_TMR0_Initialize
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           
  1861                           ;psect for function _SYSTEM_Initialize
  1862  0125                     _SYSTEM_Initialize:	
  1863                           
  1864                           ;mcc.c: 72: OSCILLATOR_Initialize();
  1865                           
  1866                           ;incstack = 0
  1867                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1868  0125  3181  2159  3181   	fcall	_OSCILLATOR_Initialize
  1869                           
  1870                           ;mcc.c: 73: PIN_MANAGER_Initialize();
  1871  0128  3180  20ED  3181   	fcall	_PIN_MANAGER_Initialize
  1872                           
  1873                           ;mcc.c: 74: TMR0_Initialize();
  1874  012B  3181  2131  3181   	fcall	_TMR0_Initialize
  1875                           
  1876                           ;mcc.c: 75: EUSART_Initialize();
  1877  012E  3181  213C         	fcall	_EUSART_Initialize
  1878  0130  0008               	return
  1879  0131                     __end_of_SYSTEM_Initialize:	
  1880                           
  1881                           	psect	text7
  1882  0131                     __ptext7:	
  1883 ;; *************** function _TMR0_Initialize *****************
  1884 ;; Defined at:
  1885 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;		None               void
  1892 ;; Registers used:
  1893 ;;		wreg, status,2
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1903 ;;Total ram usage:        0 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; Hardware stack levels required when called:    3
  1906 ;; This function calls:
  1907 ;;		Nothing
  1908 ;; This function is called by:
  1909 ;;		_SYSTEM_Initialize
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           
  1914                           ;psect for function _TMR0_Initialize
  1915  0131                     _TMR0_Initialize:	
  1916                           
  1917                           ;tmr0.c: 69: OPTION_REG = (OPTION_REG & 0xC0) | 0xD7 & 0x3F;
  1918                           
  1919                           ;incstack = 0
  1920                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  1921  0131  0021               	movlb	1	; select bank1
  1922  0132  0815               	movf	21,w	;volatile
  1923  0133  39C0               	andlw	192
  1924  0134  3817               	iorlw	23
  1925  0135  0095               	movwf	21	;volatile
  1926                           
  1927                           ;tmr0.c: 72: TMR0 = 0x00;
  1928  0136  0020               	movlb	0	; select bank0
  1929  0137  0195               	clrf	21	;volatile
  1930                           
  1931                           ;tmr0.c: 75: timer0ReloadVal = 0;
  1932  0138  01FC               	clrf	_timer0ReloadVal	;volatile
  1933                           
  1934                           ;tmr0.c: 78: INTCONbits.TMR0IF = 0;
  1935  0139  110B               	bcf	11,2	;volatile
  1936                           
  1937                           ;tmr0.c: 81: INTCONbits.TMR0IE = 1;
  1938  013A  168B               	bsf	11,5	;volatile
  1939  013B  0008               	return
  1940  013C                     __end_of_TMR0_Initialize:	
  1941                           
  1942                           	psect	text8
  1943  00ED                     __ptext8:	
  1944 ;; *************** function _PIN_MANAGER_Initialize *****************
  1945 ;; Defined at:
  1946 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;		None               void
  1953 ;; Registers used:
  1954 ;;		wreg, status,2
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1964 ;;Total ram usage:        0 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    3
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_SYSTEM_Initialize
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           
  1975                           ;psect for function _PIN_MANAGER_Initialize
  1976  00ED                     _PIN_MANAGER_Initialize:	
  1977                           
  1978                           ;pin_manager.c: 51: LATA = 0x00;
  1979                           
  1980                           ;incstack = 0
  1981                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1982  00ED  0022               	movlb	2	; select bank2
  1983  00EE  018C               	clrf	12	;volatile
  1984                           
  1985                           ;pin_manager.c: 52: TRISA = 0xFF;
  1986  00EF  30FF               	movlw	255
  1987  00F0  0021               	movlb	1	; select bank1
  1988  00F1  008C               	movwf	12	;volatile
  1989                           
  1990                           ;pin_manager.c: 53: ANSELA = 0x3F;
  1991  00F2  303F               	movlw	63
  1992  00F3  0023               	movlb	3	; select bank3
  1993  00F4  008C               	movwf	12	;volatile
  1994                           
  1995                           ;pin_manager.c: 55: LATB = 0x00;
  1996  00F5  0022               	movlb	2	; select bank2
  1997  00F6  018D               	clrf	13	;volatile
  1998                           
  1999                           ;pin_manager.c: 56: TRISB = 0xFF;
  2000  00F7  30FF               	movlw	255
  2001  00F8  0021               	movlb	1	; select bank1
  2002  00F9  008D               	movwf	13	;volatile
  2003                           
  2004                           ;pin_manager.c: 57: ANSELB = 0x3F;
  2005  00FA  303F               	movlw	63
  2006  00FB  0023               	movlb	3	; select bank3
  2007  00FC  008D               	movwf	13	;volatile
  2008                           
  2009                           ;pin_manager.c: 58: WPUB = 0x00;
  2010  00FD  0024               	movlb	4	; select bank4
  2011  00FE  018D               	clrf	13	;volatile
  2012                           
  2013                           ;pin_manager.c: 60: LATC = 0x00;
  2014  00FF  0022               	movlb	2	; select bank2
  2015  0100  018E               	clrf	14	;volatile
  2016                           
  2017                           ;pin_manager.c: 61: TRISC = 0xFE;
  2018  0101  30FE               	movlw	254
  2019  0102  0021               	movlb	1	; select bank1
  2020  0103  008E               	movwf	14	;volatile
  2021                           
  2022                           ;pin_manager.c: 63: LATE = 0x00;
  2023  0104  0022               	movlb	2	; select bank2
  2024  0105  0190               	clrf	16	;volatile
  2025                           
  2026                           ;pin_manager.c: 64: TRISE = 0x08;
  2027  0106  3008               	movlw	8
  2028  0107  0021               	movlb	1	; select bank1
  2029  0108  0090               	movwf	16	;volatile
  2030                           
  2031                           ;pin_manager.c: 65: WPUE = 0x00;
  2032  0109  0024               	movlb	4	; select bank4
  2033  010A  0190               	clrf	16	;volatile
  2034                           
  2035                           ;pin_manager.c: 67: OPTION_REGbits.nWPUEN = 0x01;
  2036  010B  0021               	movlb	1	; select bank1
  2037  010C  1795               	bsf	21,7	;volatile
  2038                           
  2039                           ;pin_manager.c: 69: APFCON = 0x00;
  2040  010D  0022               	movlb	2	; select bank2
  2041  010E  019D               	clrf	29	;volatile
  2042  010F  0008               	return
  2043  0110                     __end_of_PIN_MANAGER_Initialize:	
  2044                           
  2045                           	psect	text9
  2046  0159                     __ptext9:	
  2047 ;; *************** function _OSCILLATOR_Initialize *****************
  2048 ;; Defined at:
  2049 ;;		line 78 in file "mcc_generated_files/mcc.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;		None
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;		None
  2054 ;; Return value:  Size  Location     Type
  2055 ;;		None               void
  2056 ;; Registers used:
  2057 ;;		wreg, status,2
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2067 ;;Total ram usage:        0 bytes
  2068 ;; Hardware stack levels used:    1
  2069 ;; Hardware stack levels required when called:    3
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		_SYSTEM_Initialize
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           
  2078                           ;psect for function _OSCILLATOR_Initialize
  2079  0159                     _OSCILLATOR_Initialize:	
  2080                           
  2081                           ;mcc.c: 80: OSCCON = 0x72;
  2082                           
  2083                           ;incstack = 0
  2084                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2085  0159  3072               	movlw	114
  2086  015A  0021               	movlb	1	; select bank1
  2087  015B  0099               	movwf	25	;volatile
  2088                           
  2089                           ;mcc.c: 82: OSCSTAT = 0x00;
  2090  015C  019A               	clrf	26	;volatile
  2091                           
  2092                           ;mcc.c: 84: OSCTUNE = 0x00;
  2093  015D  0198               	clrf	24	;volatile
  2094  015E  0008               	return
  2095  015F                     __end_of_OSCILLATOR_Initialize:	
  2096                           
  2097                           	psect	text10
  2098  013C                     __ptext10:	
  2099 ;; *************** function _EUSART_Initialize *****************
  2100 ;; Defined at:
  2101 ;;		line 56 in file "mcc_generated_files/eusart.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;		None
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;		None               void
  2108 ;; Registers used:
  2109 ;;		wreg, status,2
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2119 ;;Total ram usage:        0 bytes
  2120 ;; Hardware stack levels used:    1
  2121 ;; Hardware stack levels required when called:    3
  2122 ;; This function calls:
  2123 ;;		Nothing
  2124 ;; This function is called by:
  2125 ;;		_SYSTEM_Initialize
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           
  2130                           ;psect for function _EUSART_Initialize
  2131  013C                     _EUSART_Initialize:	
  2132                           
  2133                           ;eusart.c: 60: BAUDCON = 0x48;
  2134                           
  2135                           ;incstack = 0
  2136                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  2137  013C  3048               	movlw	72
  2138  013D  0023               	movlb	3	; select bank3
  2139  013E  009F               	movwf	31	;volatile
  2140                           
  2141                           ;eusart.c: 63: RCSTA = 0x90;
  2142  013F  3090               	movlw	144
  2143  0140  009D               	movwf	29	;volatile
  2144                           
  2145                           ;eusart.c: 66: TXSTA = 0x26;
  2146  0141  3026               	movlw	38
  2147  0142  009E               	movwf	30	;volatile
  2148                           
  2149                           ;eusart.c: 69: SPBRGL = 0xCF;
  2150  0143  30CF               	movlw	207
  2151  0144  009B               	movwf	27	;volatile
  2152                           
  2153                           ;eusart.c: 72: SPBRGH = 0x00;
  2154  0145  019C               	clrf	28	;volatile
  2155  0146  0008               	return
  2156  0147                     __end_of_EUSART_Initialize:	
  2157                           
  2158                           	psect	intentry
  2159  0004                     __pintentry:	
  2160 ;; *************** function _INTERRUPT_InterruptManager *****************
  2161 ;; Defined at:
  2162 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;		None
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;		None
  2167 ;; Return value:  Size  Location     Type
  2168 ;;		None               void
  2169 ;; Registers used:
  2170 ;;		wreg, status,2, status,0, pclath, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2179 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2180 ;;Total ram usage:        1 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    2
  2183 ;; This function calls:
  2184 ;;		_TMR0_ISR
  2185 ;; This function is called by:
  2186 ;;		Interrupt level 1
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190  0004                     _INTERRUPT_InterruptManager:	
  2191                           
  2192                           ;incstack = 0
  2193                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2194  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2195  0005  3180               	pagesel	$
  2196  0006  0020               	movlb	0	; select bank0
  2197  0007  087F               	movf	127,w
  2198  0008  00F0               	movwf	??_INTERRUPT_InterruptManager
  2199                           
  2200                           ;interrupt_manager.c: 54: if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
  2201  0009  1A8B               	btfsc	11,5	;volatile
  2202  000A  1D0B               	btfss	11,2	;volatile
  2203  000B  280E               	goto	i1l115
  2204                           
  2205                           ;interrupt_manager.c: 55: TMR0_ISR();
  2206  000C  3181  2110         	fcall	_TMR0_ISR
  2207  000E                     i1l115:	
  2208                           ;interrupt_manager.c: 56: } else {
  2209                           
  2210  000E  0870               	movf	??_INTERRUPT_InterruptManager,w
  2211  000F  0020               	movlb	0	; select bank0
  2212  0010  00FF               	movwf	127
  2213  0011  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2214  0012  0009               	retfie
  2215  0013                     __end_of_INTERRUPT_InterruptManager:	
  2216                           
  2217                           	psect	text12
  2218  0110                     __ptext12:	
  2219 ;; *************** function _TMR0_ISR *****************
  2220 ;; Defined at:
  2221 ;;		line 102 in file "mcc_generated_files/tmr0.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;		None
  2226 ;; Return value:  Size  Location     Type
  2227 ;;		None               void
  2228 ;; Registers used:
  2229 ;;		wreg, status,2, status,0, pclath, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2239 ;;Total ram usage:        0 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; Hardware stack levels required when called:    1
  2242 ;; This function calls:
  2243 ;;		_TMR0_CallBack
  2244 ;; This function is called by:
  2245 ;;		_INTERRUPT_InterruptManager
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           
  2250                           ;psect for function _TMR0_ISR
  2251  0110                     _TMR0_ISR:	
  2252                           
  2253                           ;tmr0.c: 103: static volatile unsigned int CountCallBack = 0;
  2254                           ;tmr0.c: 106: INTCONbits.TMR0IF = 0;
  2255                           
  2256                           ;incstack = 0
  2257                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  2258  0110  110B               	bcf	11,2	;volatile
  2259                           
  2260                           ;tmr0.c: 108: TMR0 = timer0ReloadVal;
  2261  0111  087C               	movf	_timer0ReloadVal,w	;volatile
  2262  0112  0020               	movlb	0	; select bank0
  2263  0113  0095               	movwf	21	;volatile
  2264                           
  2265                           ;tmr0.c: 111: if (++CountCallBack >= 15) {
  2266  0114  3001               	movlw	1
  2267  0115  07E5               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  2268  0116  3000               	movlw	0
  2269  0117  3DE6               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  2270  0118  3000               	movlw	0
  2271  0119  0266               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  2272  011A  300F               	movlw	15
  2273  011B  1903               	skipnz
  2274  011C  0265               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  2275  011D  1C03               	skipc
  2276  011E  0008               	return
  2277                           
  2278                           ;tmr0.c: 113: TMR0_CallBack();
  2279  011F  3181  2164         	fcall	_TMR0_CallBack
  2280                           
  2281                           ;tmr0.c: 116: CountCallBack = 0;
  2282  0121  0020               	movlb	0	; select bank0
  2283  0122  01E5               	clrf	TMR0_ISR@CountCallBack	;volatile
  2284  0123  01E6               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  2285  0124  0008               	return
  2286  0125                     __end_of_TMR0_ISR:	
  2287                           
  2288                           	psect	text13
  2289  0164                     __ptext13:	
  2290 ;; *************** function _TMR0_CallBack *****************
  2291 ;; Defined at:
  2292 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;		None
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;		None
  2297 ;; Return value:  Size  Location     Type
  2298 ;;		None               void
  2299 ;; Registers used:
  2300 ;;		wreg
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2310 ;;Total ram usage:        0 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; This function calls:
  2313 ;;		Nothing
  2314 ;; This function is called by:
  2315 ;;		_TMR0_ISR
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           
  2320                           ;psect for function _TMR0_CallBack
  2321  0164                     _TMR0_CallBack:	
  2322                           
  2323                           ;incstack = 0
  2324                           ; Regs used in _TMR0_CallBack: [wreg]
  2325                           ;tmr0.c: 125: do { LATC0 = ~LATC0; } while(0);
  2326  0164  3001               	movlw	1
  2327  0165  0022               	movlb	2	; select bank2
  2328  0166  068E               	xorwf	14,f
  2329  0167  0008               	return
  2330  0168                     __end_of_TMR0_CallBack:	
  2331  007E                     btemp	set	126	;btemp
  2332  007E                     int$flags	set	126
  2333  007E                     wtemp	set	126
  2334  007E                     wtemp0	set	126
  2335  0080                     wtemp1	set	128
  2336  0082                     wtemp2	set	130
  2337  0084                     wtemp3	set	132
  2338  0086                     wtemp4	set	134
  2339  0088                     wtemp5	set	136
  2340  007F                     wtemp6	set	127
  2341  007E                     ttemp	set	126
  2342  007E                     ttemp0	set	126
  2343  0081                     ttemp1	set	129
  2344  0084                     ttemp2	set	132
  2345  0087                     ttemp3	set	135
  2346  007F                     ttemp4	set	127
  2347  007E                     ltemp	set	126
  2348  007E                     ltemp0	set	126
  2349  0082                     ltemp1	set	130
  2350  0086                     ltemp2	set	134
  2351  0080                     ltemp3	set	128


Data Sizes:
    Strings     50
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     69      71
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_4(CODE[4]), STR_3(CODE[15]), STR_2(CODE[3]), STR_1(CODE[28]), 
		 -> main@buff(BANK0[64]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_printf
    _printf->_putch
    _putch->_EUSART_Write

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0     909
                                             10 COMMON     2     2      0
                                              3 BANK0     66    66      0
                  _SYSTEM_Initialize
                              _getch
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              21    17      4     591
                                              3 COMMON     7     3      4
                                              0 BANK0      3     3      0
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      62
                                              2 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _getch                                                0     0      0       0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0       0
                                              0 COMMON     1     1      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
   _getch
     _EUSART_Read
   _printf
     _putch
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     45      47       5       88.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      54      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      54      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Jan 11 03:52:09 2016

                        __CFG_CP$OFF 0000                                   l31 0152  
                                 l24 0147                      _timer0ReloadVal 007C  
                        __CFG_LVP$ON 0000                                  l172 00BA  
                                l922 009F                                  l916 0091  
                                l918 0094                                  l926 00A4  
                                l784 014F                                  l928 0075  
                                l960 005A                         __CFG_CPD$OFF 0000  
                       __CFG_BORV$LO 0000                         __CFG_IESO$ON 0000  
                       ?_EUSART_Read 0070                                 STR_1 00BB  
                               STR_2 00EA                                 STR_3 00D7  
                               STR_4 00E6                                 _LATA 010C  
                               _LATB 010D                                 _LATC 010E  
                               _LATE 0110                                 _TMR0 0015  
                               _WPUB 020D                                 _WPUE 0210  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _main 001C                                 fsr0h 0005  
                               fsr1h 0007                                 fsr0l 0004  
                               indf0 0000                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 ltemp 007E  
                               start 0013                                 ttemp 007E  
                               wtemp 007E                        __CFG_MCLRE$ON 0000  
            __end_of_TMR0_Initialize 013C                        __CFG_PLLEN$ON 0000  
                      ?_EUSART_Write 0070       __size_of_OSCILLATOR_Initialize 0006  
      __end_of_OSCILLATOR_Initialize 015F                                ?_main 0070  
                      __CFG_WDTE$OFF 0000                                _LATC0 0870  
                              i1l115 000E                                _RCREG 0199  
                              _RCSTA 019D                                _TRISA 008C  
                              _TRISB 008D                                _TRISC 008E  
                              _TRISE 0090                                _TXREG 019A  
                              _TXSTA 019E                        __CFG_PWRTE$ON 0000  
                   __end_of_TMR0_ISR 0125                                _getch 0168  
                              _putch 015F                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              status 0003                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
                    __initialization 0015                         __end_of_main 0070  
                     ??_EUSART_Write 0071          ?_INTERRUPT_InterruptManager 0070  
                             ??_main 007A                               ?_getch 0070  
                             _APFCON 011D                               _ANSELA 018C  
                             ?_putch 0070                               _ANSELB 018D  
                             _OSCCON 0099                               _SPBRGH 019C  
                             _SPBRGL 019B                       __CFG_STVREN$ON 0000  
                   ?_TMR0_Initialize 0070                               _printf 0070  
                             main@ch 0063                __end_of_TMR0_CallBack 0168  
               __size_of_EUSART_Read 000A                    _SYSTEM_Initialize 0125  
            __end_of__initialization 0018                   ?_SYSTEM_Initialize 0070  
                     __pcstackCOMMON 0070                  ??_SYSTEM_Initialize 0071  
                          ?_TMR0_ISR 0070                        __end_of_getch 016B  
                      __end_of_putch 0164                       _OPTION_REGbits 0095  
              TMR0_ISR@CountCallBack 0065                              ??_getch 0071  
          __end_of_SYSTEM_Initialize 0131                              ??_putch 0072  
                         __pbssBANK0 0065                 __end_of_EUSART_Write 0159  
                    __CFG_VCAPEN$OFF 0000                           __pmaintext 001C  
                         ??_TMR0_ISR 0070                           __pintentry 0004  
                            _BAUDCON 019F                              ?_printf 0073  
                            _OSCSTAT 009A                              _OSCTUNE 0098  
                            __ptext1 0070                              __ptext2 015F  
                            __ptext3 0151                              __ptext4 0168  
                            __ptext5 0147                              __ptext6 0125  
                            __ptext7 0131                              __ptext8 00ED  
                            __ptext9 0159                      __size_of_printf 004B  
              _OSCILLATOR_Initialize 0159             ??_PIN_MANAGER_Initialize 0071  
         __size_of_SYSTEM_Initialize 000C                 end_of_initialization 0018  
                  _EUSART_Initialize 013C                   ?_EUSART_Initialize 0070  
                          _RCSTAbits 019D                              printf@c 0022  
                            printf@f 0073                         __pstringtext 00BB  
                ??_EUSART_Initialize 0071                     __CFG_FOSC$INTOSC 0000  
              __size_of_EUSART_Write 0008            __end_of_EUSART_Initialize 0147  
                       _EUSART_Write 0151                    __size_of_TMR0_ISR 0015  
             ?_OSCILLATOR_Initialize 0070                       __end_of_printf 00BB  
                start_initialization 0015             __size_of_TMR0_Initialize 000B  
    __size_of_PIN_MANAGER_Initialize 0023                        ??_EUSART_Read 0071  
                        putch@txData 0072               __size_of_TMR0_CallBack 0004  
                           ??_printf 0077                          __pbssCOMMON 007C  
                          ___latbits 0003                        __pcstackBANK0 0020  
         __size_of_EUSART_Initialize 000B                  __end_of_EUSART_Read 0151  
             _PIN_MANAGER_Initialize 00ED         ??_INTERRUPT_InterruptManager 0070  
                     __size_of_getch 0003                        _TMR0_CallBack 0164  
                     __size_of_putch 0005                    ??_TMR0_Initialize 0071  
__size_of_INTERRUPT_InterruptManager 000F                             _PIR1bits 0011  
                           _TMR0_ISR 0110                           printf@flag 0020  
                          main@count 0064                       ?_TMR0_CallBack 0070  
                        _EUSART_Read 0147              ??_OSCILLATOR_Initialize 0071  
                           __ptext10 013C                             __ptext12 0110  
                           __ptext13 0164                        __size_of_main 0054  
                           int$flags 007E   __end_of_INTERRUPT_InterruptManager 0013  
         _INTERRUPT_InterruptManager 0004                             main@buff 0023  
                         _INTCONbits 000B                      ??_TMR0_CallBack 0070  
                           intlevel1 0000              ?_PIN_MANAGER_Initialize 0070  
                  __CFG_CLKOUTEN$OFF 0000                             printf@ap 0021  
                         _OPTION_REG 0095                      _TMR0_Initialize 0131  
                 EUSART_Write@txData 0071       __end_of_PIN_MANAGER_Initialize 0110  
